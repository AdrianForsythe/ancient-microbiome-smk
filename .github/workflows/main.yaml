name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches_ignore: []

jobs:
  Linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Lint workflow
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .
        snakefile: workflow/Snakefile
        args: "--lint"

  Testing:
    runs-on: ubuntu-latest
    needs: Linting
    steps:
    - uses: actions/checkout@v2
    - name: Install workflow environments
      uses: snakemake/snakemake-github-action@v1.23.0
      with:
        directory: .test
        snakefile: workflow/Snakefile
        args: "--use-conda --show-failed-logs -j 2 --conda-cleanup-pkgs cache --conda-create-envs-only"
    - name: Build krakenuniq database
      working-directory: ./.test/resources
      run: |
        ls
        env=$(grep krakenuniq /github/workspace/.conda/envs/*yaml | awk '{print $1}' | sed -e "s/.yaml://g")
        $env/bin/krakenuniq-build --db KrakenUniq_DB
    - name: Build krona taxonomy
      run: |
        env=$(grep krona /github/workspace/.conda/envs/*yaml | awk '{print $1}' | sed -e "s/.yaml://g")
        $env/opt/krona/updateTaxonomy.sh
    - name: Test workflow (local test data)
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .test
        snakefile: workflow/Snakefile
        args: "--show-failed-logs -j 2 --use-conda"
    - name: Test report
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .test
        snakefile: workflow/Snakefile
        args: "--report report.zip"
